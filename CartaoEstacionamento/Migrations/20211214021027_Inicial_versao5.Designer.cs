// <auto-generated />
using System;
using CartaoEstacionamento.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CartaoEstacionamento.Migrations
{
    [DbContext(typeof(CartaoEstacionamentoContext))]
    [Migration("20211214021027_Inicial_versao5")]
    partial class Inicial_versao5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CartaoEstacionamento.Models.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("IdPessoa");

                    b.ToTable("Pessoa");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("CartaoEstacionamento.ViewModels.PessoaViewModel", b =>
                {
                    b.Property<int>("PessoaViewId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CNPJ")
                        .IsRequired();

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DataAbertura");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("TelComercial")
                        .IsRequired();

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.Property<int>("TipoPessoa");

                    b.HasKey("PessoaViewId");

                    b.ToTable("PessoaViewModel");
                });

            modelBuilder.Entity("CartaoEstacionamento.Models.PessoaFisica", b =>
                {
                    b.HasBaseType("CartaoEstacionamento.Models.Pessoa");

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<int>("IdPfisica");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("PessoaIdPessoa");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasIndex("PessoaIdPessoa");

                    b.ToTable("PessoaFisica");

                    b.HasDiscriminator().HasValue("PessoaFisica");
                });

            modelBuilder.Entity("CartaoEstacionamento.Models.PessoaJuridica", b =>
                {
                    b.HasBaseType("CartaoEstacionamento.Models.Pessoa");

                    b.Property<string>("CNPJ")
                        .IsRequired();

                    b.Property<int>("IdPjuridica");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("PessoaIdPessoa")
                        .HasColumnName("PessoaJuridica_PessoaIdPessoa");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasIndex("PessoaIdPessoa");

                    b.ToTable("PessoaJuridica");

                    b.HasDiscriminator().HasValue("PessoaJuridica");
                });

            modelBuilder.Entity("CartaoEstacionamento.Models.PessoaFisica", b =>
                {
                    b.HasOne("CartaoEstacionamento.Models.Pessoa", "Pessoa")
                        .WithMany("PessoaFisicas")
                        .HasForeignKey("PessoaIdPessoa");
                });

            modelBuilder.Entity("CartaoEstacionamento.Models.PessoaJuridica", b =>
                {
                    b.HasOne("CartaoEstacionamento.Models.Pessoa", "Pessoa")
                        .WithMany("PessoaJuridicas")
                        .HasForeignKey("PessoaIdPessoa");
                });
#pragma warning restore 612, 618
        }
    }
}
